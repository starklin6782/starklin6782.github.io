<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-01-22T15:06:21+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">StarkLin’s blog</title><subtitle>A website with blog posts and pages</subtitle><entry><title type="html">Random Passworld</title><link href="http://localhost:4000/demo/2023/01/09/Random-password.html" rel="alternate" type="text/html" title="Random Passworld" /><published>2023-01-09T00:00:00+08:00</published><updated>2023-01-09T00:00:00+08:00</updated><id>http://localhost:4000/demo/2023/01/09/Random-password</id><content type="html" xml:base="http://localhost:4000/demo/2023/01/09/Random-password.html"><![CDATA[<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      .flex {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      body {
        flex-direction: column;
      }
      .container {
        flex-direction: column;
        width: 400px;
        height: 400px;
      }
      .box {
        margin: 1rem;
      }
      button {
        padding: 0.5rem;
        margin-right: 0.5rem;
      }
      #input-el {
        padding: 0.5rem;
        margin-right: 0.5rem;
      }
      .copied {
        margin-top: 2rem;
        padding: 0.5rem 8rem;
        background-color: rgb(163, 163, 163);
        opacity: 0;
      }
    </style>
  </head>
  <body class="flex">
    <div class="container flex">
      <h1>Generate Password</h1>
      <div class="box flex">
        <input type="text" id="input-el" />
        <button id="copy-button">copy</button>
        <button id="generate-button">Generate</button>
      </div>
      <p class="copied">copied</p>
    </div>
    <script>
      //dom selection
      let inputEl = document.querySelector("#input-el");
      const copyButton = document.querySelector("#copy-button");
      const copied = document.querySelector(".copied");
      const generateButton = document.querySelector("#generate-button");
      let password = "";
      generateButton.addEventListener("click", function () {
        let password = "";
        inputEl.value =""
        const length = 8;
        let chars = `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%&*()`;
        let n = chars.length;
        for (let i = 0; i < length; i++) {
          password += chars.charAt(Math.floor(Math.random() * n));
        }
        console.log(password);
        inputEl.value = password;
      });
      copyButton.addEventListener("click", function () {
        inputEl.value =""
        navigator.clipboard.writeText(password);
        copied.style.opacity = "1";
        setTimeout(function () {
          copied.style.opacity = "0";
        }, 900);
      });
    </script>
  </body>
</html>]]></content><author><name></name></author><category term="Demo" /><category term="Project" /><summary type="html"><![CDATA[Generate Password copy Generate copied]]></summary></entry><entry><title type="html">Memory game</title><link href="http://localhost:4000/2023/01/08/Interesting-Project.html" rel="alternate" type="text/html" title="Memory game" /><published>2023-01-08T00:00:00+08:00</published><updated>2023-01-08T00:00:00+08:00</updated><id>http://localhost:4000/2023/01/08/Interesting-Project</id><content type="html" xml:base="http://localhost:4000/2023/01/08/Interesting-Project.html"><![CDATA[<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Memory Game</title>

    <style>
        body {
            background-color: #506972;
            font-family: sans-serif;
        }

        .container {
            display: flex;
            flex-direction: row;
            justify-content: center;
            padding: 0 20px;
        }

        .container-inner {
            width: 100%;
            max-width: 1024px;
        }

        .vertical-space-manager {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            gap: 1rem;
        }

        .game-player {
            max-width: 100%;
            padding: 1rem;
            background-color: #F0F0F1;
            border-radius: 16px;
            overflow: hidden;
        }

        .game-title {
            text-align: center;
        }

        #game-description {
            text-align: center;
        }

        #start-button-container {
            width: 100%;
            display: flex;
            flex-direction: row;
            justify-content: center;
            margin-top: 2rem;
        }

        .start-button-container-disabled {
            opacity: 0;
            pointer-events: none;
        }

        #start-button {
            color: white;
            background-color: #11D66D;
            padding: 1rem 2rem;
            border: none;
            border-radius: 16px;
            cursor: pointer;
            transition: all 0.2s;
        }

        #start-button:hover {
            opacity: 0.7;
        }

        #current-level-info {
            margin-top: 1rem;
        }

        #current-level-number-display {
            text-align: center;
            margin-bottom: 2rem;
            transition: all 0.2s;
            opacity: 0;
        }

        .current-level-number-display-enabled {
            opacity: 1 !important;
        }

        #current-level-guesses-message {
            text-align: center;
            margin-bottom: 2rem;
        }

        #current-level-guesses-display {
            display: flex;
            flex-direction: row;
            justify-content: center;
            gap: 0.5rem;
        }

        .current-correct-guess-panel {
            flex: 1;
            aspect-ratio: 1;
            max-width: 10%;
            transition: all 0.2s;
            border-radius: 8px;
        }

        #random-panel-container {
            width: 100%;
            display: flex;
            flex-direction: row;
            justify-content: center;
            margin-top: 2rem;
        }

        #random-panel {
            width: 100%;
            max-width: 200px;
            aspect-ratio: 1;
            border-radius: 16px;
            /*transition: all 0.2s;*/
        }

        .random-panel-none {
            display: none;
        }

        #controls {
            margin-top: 1rem;
            transition: all 0.2s;
            opacity: 0;
            pointer-events: none;
        }

        .controls-enabled {
            opacity: 1 !important;
            pointer-events: all !important;
        }

        #controls-instructions {
            text-align: center;
            margin-bottom: 2rem;
        }

        #controls-btns-row {
            margin-top: 1rem;
            display: flex;
            flex-direction: row;
            gap: 1rem;
        }

        .controls-btn {
            flex: 1;
            aspect-ratio: 1;
            border-radius: 16px;
            cursor: pointer;
            transition: all 0.2s;
        }

        .controls-btn:hover {
            opacity: 0.7;
        }

        #game-over-container {
            margin-top: 1rem;
            display: none;
        }

        .game-over-container-visible {
            display: block !important;
        }

        #game-over-message {
            text-align: center;
            color: #FF4238;
        }

        #game-over-correct-solution {
            display: flex;
            flex-direction: row;
            justify-content: center;
            gap: 0.5rem;
        }

        .bg-red {
            background-color: #FF4238;
        }

        .bg-yellow {
            background-color: #FFEE3F;
        }

        .bg-green {
            background-color: #11D66D;
        }

        .bg-purple {
            background-color: #7859E6;
        }
    </style>
</head>

<body>
<div>
    <div class="container">
        <div class="container-inner">
            <div class="vertical-space-manager">
                <div>
                </div>

                <div class="game-player">
                    <h1 class="game-title">Memory Game</h1>
                    <h5 id="game-description">
                        Click "Start Game" and try to remember the colors you see!<br /><br />
                        Each level is randomized from the prvevious &amp; gets faster &amp; faster!
                    </h5>

                    <div id="start-button-container">
                        <button id="start-button">
                            Start Game
                        </button>
                    </div>

                    <div id="current-level-info">
                        <div>
                            <h3 id="current-level-number-display"></h3>
                        </div>

                        <div>
                            <h3 id="current-level-guesses-message"></h3>

                            <div id="current-level-guesses-display">

                            </div>
                        </div>
                    </div>

                    <div id="random-panel-container">
                        <div id="random-panel">
                        </div>
                    </div>

                    <div id="controls">
                        <div>
                            <h3 id="controls-instructions">
                                Click the colors in the order they appeared
                            </h3>
                        </div>

                        <div id="controls-btns-row">
                            <div id="controls-btn-red" class="controls-btn bg-red">
                            </div>

                            <div id="controls-btn-yellow" class="controls-btn bg-yellow">
                            </div>

                            <div id="controls-btn-green" class="controls-btn bg-green">
                            </div>

                            <div id="controls-btn-purple" class="controls-btn bg-purple">
                            </div>
                        </div>
                    </div>

                    <div id="game-over-container">
                        <h2 id="game-over-message">
                            Game Over!<br /><br />
                            Click "Start Game" to play again.<br /><br />
                            Correct solution below:
                        </h2>

                        <div id="game-over-correct-solution">

                        </div>
                    </div>
                </div>

                <div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    /* I wrote this all during a flight, so don't critique it too hard! */

    console.log("Not trying to cheat, are you?");

    let levelFlashingInProgress = false;
    let level = 0;
    const baseRounds = 4;
    const baseTime = 1000;
    const levelSpeedMod = 65;

    let currentBg;
    let currentLevelBgs = [];
    let currentLevelGuesses = [];
    let currentIteration = 0;

    const startButtonContainer = document.getElementById("start-button-container");
    const startButton = document.getElementById("start-button");
    const currentLevelNumberDisplay = document.getElementById("current-level-number-display");
    const currentLevelGuessesMessage = document.getElementById("current-level-guesses-message");
    const currentLevelGuessesDisplay = document.getElementById("current-level-guesses-display");
    const randomPanel = document.getElementById("random-panel");
    const controls = document.getElementById("controls");
    const gameOverContainer = document.getElementById("game-over-container");
    const gameOverCorrectSolution = document.getElementById("game-over-correct-solution");

    const controlsBtnRed = document.getElementById("controls-btn-red");
    const controlsBtnYellow = document.getElementById("controls-btn-yellow");
    const controlsBtnGreen = document.getElementById("controls-btn-green");
    const controlsBtnPurple = document.getElementById("controls-btn-purple");

    startButton.addEventListener("click", startLevel);

    controlsBtnRed.addEventListener("click", guessColor("bg-red"));
    controlsBtnYellow.addEventListener("click", guessColor("bg-yellow"));
    controlsBtnGreen.addEventListener("click", guessColor("bg-green"));
    controlsBtnPurple.addEventListener("click", guessColor("bg-purple"));

    function getRandomNumberInclusive(lower, upper) {
        return Math.floor(Math.random() * (upper + 1) - lower);
    }

    // Map the numbers to classes for the random panel
    function getClassNameFromNumber(number) {
        switch(number) {
            case 0:
                return "bg-red";
            case 1:
                return "bg-yellow";
            case 2:
                return "bg-green";
            case 3:
            default:
                return "bg-purple";
        }
    }

    function startLevel() {
        if (levelFlashingInProgress) {
            return;
        }

        levelFlashingInProgress = true;
        // clear the correct guesses section
        currentLevelGuessesMessage.innerText = "";
        currentLevelGuessesDisplay.innerHTML = "";
        startButtonContainer.classList.add("start-button-container-disabled");
        gameOverContainer.classList.remove("game-over-container-visible");
        randomPanel.classList.remove("random-panel-none");
        currentLevelNumberDisplay.innerText = `Current Level: ${level + 1}`;
        currentLevelNumberDisplay.classList.add("current-level-number-display-enabled")

        const intervalSpeed = baseTime - (level * levelSpeedMod * (((level * 100) / 1000) + 1));

        let workingClassName;

        // Start the level, or "flashing"
        const flashingInterval =  setInterval(() => {
            if (workingClassName) {
                randomPanel.classList.remove(workingClassName); // Remove the previous color of the flashing div
            }

            workingClassName = getNewClass(); // generate a new class
            currentBg = workingClassName; // save the new class for reference
            currentLevelBgs.push(currentBg);
            randomPanel.classList.add(workingClassName); // add the new class to the flashing div
            currentIteration++;

            if (currentIteration === level + baseRounds) {
                clearInterval(flashingInterval);
                setTimeout(() => {
                    levelFlashingInProgress = false;
                    preparePlayingFieldForLevel();
                }, intervalSpeed);
            }
        }, intervalSpeed); // increments a little bit faster each level
    }

    function preparePlayingFieldForLevel() {
        // console.log(currentLevelBgs);
        randomPanel.classList.forEach(c => randomPanel.classList.remove(c));
        randomPanel.classList.add("random-panel-none");
        controls.classList.add("controls-enabled");
        currentLevelGuessesMessage.innerText = getCurrentCorrectGuessesMessage();
    }

    function guessColor(color) {
        return () => {
            if (color === currentLevelBgs[currentLevelGuesses.length]) {
                currentLevelGuesses.push(color);
                currentLevelGuessesMessage.innerText = getCurrentCorrectGuessesMessage();
                getNewCurrentCorrectGuessesDisplay(color, currentLevelGuessesDisplay);

                if (currentLevelGuesses.length === currentLevelBgs.length) {
                    // clear the controls
                    controls.classList.remove("controls-enabled");

                    setTimeout(() => {
                        // reset a whole ton of variables
                        currentBg = null;
                        currentLevelBgs = [];
                        currentLevelGuesses = [];
                        currentIteration = 0;

                        // clear the correct guesses section
                        currentLevelGuessesMessage.innerText = "";
                        currentLevelGuessesDisplay.innerHTML = "";

                        // increment the level
                        level++;

                        // begin again
                        startLevel();
                    }, 1000);
                }
            } else {
                console.log("you lose! (But there's really no winning, is there?)");
                gameOverContainer.classList.add("game-over-container-visible");
                randomPanel.classList.add("random-panel-none");
                currentLevelBgs.forEach(c => getNewCurrentCorrectGuessesDisplay(c, gameOverCorrectSolution));
                controls.classList.remove("controls-enabled");
                startButtonContainer.classList.remove("start-button-container-disabled");
                currentBg = null;
                currentLevelBgs = [];
                currentLevelGuesses = [];
                currentIteration = 0;
                level = 0;
            }
        }
    }

    function getCurrentCorrectGuessesMessage() {
        return `Current Correct Guesses: ${currentLevelGuesses.length}/${currentLevelBgs.length}`;
    }

    function getNewCurrentCorrectGuessesDisplay(className, parent) {
        const newPanel = document.createElement("div");
        newPanel.classList.add("current-correct-guess-panel");
        newPanel.classList.add(className);
        parent.append(newPanel);
    }

    function getNewClass() {
        const classNumber = getRandomNumberInclusive(0, 3);
        let workingClassName = getClassNameFromNumber(classNumber);

        if (currentBg === workingClassName) {
            workingClassName = getNewClass();
        }

        return workingClassName;
    }
</script>
</body>
</html>]]></content><author><name>starklin</name></author><category term="Project" /><summary type="html"><![CDATA[Memory Game]]></summary></entry><entry><title type="html">Dark Mode</title><link href="http://localhost:4000/demo/2021/04/27/dark-mode.html" rel="alternate" type="text/html" title="Dark Mode" /><published>2021-04-27T00:00:00+08:00</published><updated>2021-04-27T00:00:00+08:00</updated><id>http://localhost:4000/demo/2021/04/27/dark-mode</id><content type="html" xml:base="http://localhost:4000/demo/2021/04/27/dark-mode.html"><![CDATA[<p>More colors with less light. Click the <strong>half-moon</strong> most top-right button to turn the lights ON/OFF.
Here is a bit of everything, so you can check how the theme look, have fun! 👌</p>

<h1 id="headers">Headers</h1>
<h2 id="level-2">Level 2</h2>
<h3 id="level-3">Level 3</h3>
<h4 id="level-4">Level 4</h4>
<h5 id="level-5">Level 5</h5>
<h6 id="level-6">Level 6</h6>

<h1 id="headers-with-links"><a href="http://localhost">Headers with links</a></h1>
<h2 id="level-2-1"><a href="http://localhost">Level 2</a></h2>
<h3 id="level-3-1"><a href="http://localhost">Level 3</a></h3>
<h4 id="level-4-1"><a href="http://localhost">Level 4</a></h4>
<h5 id="level-5-1"><a href="http://localhost">Level 5</a></h5>
<h6 id="level-6-1"><a href="http://localhost">Level 6</a></h6>

<h2 id="code-highlight">Code highlight</h2>
<p>Mode specific code highlighting themes. <a href="https://kramdown.gettalong.org/">Kramdown</a> which is responsible for the color highlighting may be more limited than your IDE.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span><span class="s">"""
Test file for syntax
"""</span>
<span class="c1"># TODO: Use dark mode
</span><span class="kn">from</span> <span class="nn">sys</span> <span class="kn">import</span> <span class="n">os</span>

<span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="n">bar</span><span class="p">):</span> 
    <span class="k">try</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">bar</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">NameError</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Variable bar is not defined"</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">Bar</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span> 
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">foo</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">octal</span> <span class="o">=</span> <span class="s">'</span><span class="se">\04</span><span class="s">'</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"""Example </span><span class="se">\t\n</span><span class="s">"""</span>
    
    <span class="k">def</span> <span class="nf">__exit__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'exit</span><span class="se">\u1111\xFF</span><span class="s">'</span><span class="p">)</span>
        <span class="k">pass</span>
    
    <span class="o">@</span><span class="nb">staticmethod</span>
    <span class="k">def</span> <span class="nf">example</span><span class="p">():</span>
        <span class="k">assert</span> <span class="p">(</span><span class="mf">1.0</span> <span class="ow">and</span> <span class="il">2L</span><span class="p">)</span> <span class="ow">or</span> <span class="bp">True</span>
        <span class="k">return</span> <span class="p">{</span> <span class="s">"example"</span><span class="p">:</span> <span class="p">[(</span><span class="mi">1</span><span class="p">,),</span> <span class="p">(</span><span class="sa">r</span><span class="s">'raw'</span><span class="p">,</span> <span class="sa">u</span><span class="s">'unicode'</span><span class="p">)]}</span>
</code></pre></div></div>

<h2 id="tables">Tables</h2>

<table>
  <thead>
    <tr>
      <th>hex</th>
      <th>dec</th>
      <th>oct</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>5</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>A</td>
      <td>10</td>
      <td>12</td>
    </tr>
    <tr>
      <td>F</td>
      <td>16</td>
      <td>20</td>
    </tr>
    <tr>
      <td>F5</td>
      <td>21</td>
      <td>25</td>
    </tr>
  </tbody>
</table>

<h2 id="katex">KaTeX</h2>

<p>Some KaTeX diagrams to check in dark mode:</p>

\[\begin{CD}
A @&gt;a&gt;&gt; B \\
@VbVV @AAcA \\
C @= D
\end{CD}\]

\[\utilde{AB}\]

<h2 id="mermaid">Mermaid</h2>

<div class="mermaid">
flowchart TB
    c1--&gt;a2
    subgraph one
    a1--&gt;a2
    end
    subgraph two
    b1--&gt;b2
    end
    subgraph three
    c1--&gt;c2
    end
</div>]]></content><author><name></name></author><category term="Demo" /><category term="Katex" /><category term="Mermaid" /><category term="Markdown" /><summary type="html"><![CDATA[More colors with less light. Click the half-moon most top-right button to turn the lights ON/OFF. Here is a bit of everything, so you can check how the theme look, have fun! 👌]]></summary></entry><entry><title type="html">Tech Stuff example</title><link href="http://localhost:4000/2019/11/02/Tech-stuff-example.html" rel="alternate" type="text/html" title="Tech Stuff example" /><published>2019-11-02T00:00:00+08:00</published><updated>2019-11-02T00:00:00+08:00</updated><id>http://localhost:4000/2019/11/02/Tech-stuff-example</id><content type="html" xml:base="http://localhost:4000/2019/11/02/Tech-stuff-example.html"><![CDATA[<p>Let’s demo some code snippet, with some mermaid diagrams.
Because if you put some code in your blog, you would at least make it:</p>
<ol>
  <li>Searchable</li>
  <li>Good-looking</li>
</ol>

<h2 id="search-on-code">Search on code</h2>

<p>Search should be working even for complicated escape symbols.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'s/\"hostname\"\:.*$/\"hostname\"\: \"'</span><span class="nv">$IPADDR</span><span class="s1">'\"\,/g'</span> open-falcon/agent/config/cfg.json
</code></pre></div></div>

<p>Or try searching for partial of a command, like this article should be returned when looking for “find grep”</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find /etc <span class="nt">-type</span> f <span class="nt">-exec</span> <span class="nb">cat</span> <span class="s1">'{}'</span> <span class="se">\;</span> | <span class="nb">tr</span> <span class="nt">-c</span> <span class="s1">'.[:digit:]'</span> <span class="s1">'\n'</span> | <span class="nb">grep</span> <span class="s1">'^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'</span>
</code></pre></div></div>

<h2 id="code-highlighting-examples">Code highlighting examples</h2>

<p>Because you might put code in your blog post, and you want to make sure it will look good in here. Plus that the search
function will still be working!</p>

<h3 id="java">Java</h3>

<p>java example</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="nd">@Example</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONSTANT</span> <span class="o">=</span> <span class="s">"String"</span><span class="o">;</span>
  <span class="kd">private</span> <span class="nc">Object</span> <span class="n">o</span><span class="o">;</span>
  <span class="cm">/**
   * Creates a new demo.
   * @param o The object to demonstrate.
   */</span>
  <span class="kd">public</span> <span class="nf">Demo</span><span class="o">(</span><span class="nc">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">this</span><span class="o">.</span><span class="na">o</span> <span class="o">=</span> <span class="n">o</span> <span class="o">!==</span> <span class="kc">null</span> <span class="o">?</span> <span class="n">o</span> <span class="o">:</span> <span class="k">new</span> <span class="nc">Object</span><span class="o">();</span>
    <span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="no">CONSTANT</span> <span class="o">+</span> <span class="s">"Other example of text"</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">123</span> <span class="o">-</span> <span class="mi">33</span> <span class="o">%</span> <span class="mi">11</span><span class="o">;</span>
  <span class="o">}</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">Demo</span> <span class="n">demo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Demo</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">demo</span><span class="o">.</span><span class="na">o</span><span class="o">.</span><span class="na">toString</span><span class="o">())</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="javascript">Javascript</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Does a thing
 */</span>
<span class="kd">function</span> <span class="nx">helloWorld</span><span class="p">(</span><span class="nx">param1</span><span class="p">,</span> <span class="nx">param2</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">example</span> <span class="o">=</span> <span class="s2">`hello </span><span class="p">${</span><span class="nx">param1</span><span class="p">}</span><span class="s2">`</span>
    <span class="kd">var</span> <span class="nx">something</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">key</span><span class="p">:</span> <span class="dl">"</span><span class="s2">value</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">number</span><span class="p">:</span> <span class="mi">1</span>
    <span class="p">};</span>

    <span class="c1">// Do something</span>
    <span class="k">if</span> <span class="p">(</span><span class="mf">2.0</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="nx">something</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello, world!</span><span class="dl">'</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// TODO comment</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="json">JSON</h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"animals"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"tiger"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"tiger"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"images"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"🐯"</span><span class="p">,</span><span class="w"> </span><span class="s2">"🐅"</span><span class="p">,</span><span class="w"> </span><span class="s2">"⻁"</span><span class="p">]</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"turtle"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"age"</span><span class="p">:</span><span class="w"> </span><span class="mi">126</span><span class="p">,</span><span class="w">
      </span><span class="nl">"image"</span><span class="p">:</span><span class="w"> </span><span class="s2">"🐢"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"unicorn"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"doesExist"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
      </span><span class="nl">"image"</span><span class="p">:</span><span class="w"> </span><span class="s2">"🦄"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="python">Python</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">os</span>


<span class="k">def</span> <span class="nf">some_function</span><span class="p">(</span><span class="n">param_one</span><span class="o">=</span><span class="s">""</span><span class="p">,</span> <span class="n">param_two</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
    <span class="sa">r</span><span class="s">'''A docstring'''</span>
    <span class="k">if</span> <span class="n">param_one</span> <span class="o">&gt;</span> <span class="n">param_two</span><span class="p">:</span>  <span class="c1"># interesting
</span>        <span class="k">print</span><span class="p">(</span><span class="s">"Greater"</span><span class="p">)</span>
    <span class="k">return</span> <span class="p">(</span><span class="n">param_two</span> <span class="o">-</span> <span class="n">param_one</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="mb">0b10</span><span class="p">)</span> <span class="ow">or</span> <span class="bp">None</span>


<span class="k">class</span> <span class="nc">SomeClass</span><span class="p">:</span>
    <span class="s">""" dunno what I am doing """</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">pass</span>
</code></pre></div></div>

<h3 id="yaml">YAML</h3>

<p>You can also render some yaml, like this <code class="language-plaintext highlighter-rouge">_config.yml</code>:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># Welcome to Jekyll!</span>
<span class="c1">#</span>
<span class="c1"># This config file is meant for settings that affect your whole blog, values</span>
<span class="c1"># which you are expected to set up once and rarely edit after that. If you find</span>
<span class="c1"># yourself editing this file very often, consider using Jekyll's data files</span>
<span class="c1"># feature for the data you need to update frequently.</span>
<span class="c1">#</span>
<span class="c1"># This file, "_config.yml" is *NOT* reloaded automatically when you use</span>
<span class="c1"># 'bundle exec jekyll serve'. If you change this file, please restart the server process.</span>

<span class="c1"># Site settings</span>
<span class="c1"># These are used to personalize your new site. If you look in the HTML files,</span>
<span class="c1"># you will see them accessed via StarkLin's blog, , and so on.</span>
<span class="c1"># You can create any custom variable you would like, and they will be accessible</span>
<span class="c1"># in the templates via .</span>

<span class="c1"># SITE CONFIGURATION</span>
<span class="na">baseurl</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/Type-on-Strap"</span>
<span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">https://sylhare.github.io"</span>

<span class="c1"># THEME-SPECIFIC CONFIGURATION</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Type on Strap</span>                                    <span class="c1"># site's title</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">A</span><span class="nv"> </span><span class="s">website</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">blog</span><span class="nv"> </span><span class="s">posts</span><span class="nv"> </span><span class="s">and</span><span class="nv"> </span><span class="s">pages"</span>      <span class="c1"># used by search engines</span>
<span class="na">avatar</span><span class="pi">:</span> <span class="s">assets/img/triangle.png</span>                         <span class="c1"># Empty for no avatar in navbar</span>
<span class="na">favicon</span><span class="pi">:</span> <span class="s">assets/favicon.ico</span>                             <span class="c1"># Icon displayed in the tab</span>

<span class="na">remote_theme</span><span class="pi">:</span> <span class="s">sylhare/Type-on-Strap</span>                     <span class="c1"># If using as a remote_theme in github</span>
</code></pre></div></div>

<h3 id="mermaid">Mermaid</h3>

<p>Diagrams with mermaid, make sure it is enabled in the <code class="language-plaintext highlighter-rouge">_config.yml</code>.
Here is a simple example:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- To generate a diagram --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"mermaid"</span><span class="nt">&gt;</span>
sequenceDiagram
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p>That will be rendered into this:</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/mermaid-example.png" alt="mermaid-example.png" />
    </div>
    
</div>

<p>You can also go with more complex features and diagrams from the <a href="https://mermaid-js.github.io/mermaid/">documentation</a>:</p>
<details>
<summary>▶ More complex diagram</summary>
<div class="mermaid">
sequenceDiagram
    participant Alice
    participant Bob
    Alice-&gt;&gt;John: Hello John, how are you?
    loop Healthcheck
        John-&gt;&gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts prevail!
    John--&gt;&gt;Alice: Great!
    John-&gt;&gt;Bob: How about you?
    Bob--&gt;&gt;John: Jolly good!
</div>
</details>]]></content><author><name></name></author><category term="Mermaid" /><category term="Highlight" /><category term="Markdown" /><summary type="html"><![CDATA[Let’s demo some code snippet, with some mermaid diagrams. Because if you put some code in your blog, you would at least make it: Searchable Good-looking]]></summary></entry><entry><title type="html">Sample post</title><link href="http://localhost:4000/2019/06/30/sample-post.html" rel="alternate" type="text/html" title="Sample post" /><published>2019-06-30T00:00:00+08:00</published><updated>2019-06-30T00:00:00+08:00</updated><id>http://localhost:4000/2019/06/30/sample-post</id><content type="html" xml:base="http://localhost:4000/2019/06/30/sample-post.html"><![CDATA[<p>Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. 
Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. 
<!--more-->
Donec ut libero sed arcu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut gravida lorem.</p>

<ul>
  <li>Consectetur adipiscing elit</li>
  <li>Donec a diam lectus</li>
  <li>Sed sit amet ipsum mauris</li>
</ul>

<p>Ut turpis felis, pulvinar a semper sed, adipiscing id dolor. Pellentesque auctor nisi id magna consequat sagittis. Curabitur dapibus enim sit amet elit pharetra tincidunt feugiat nisl imperdiet. Ut convallis libero in urna ultrices accumsan. Donec sed odio eros. Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem facilisis semper ac in est.</p>

<p>Nunc diam velit, adipiscing ut tristique vitae, sagittis vel odio. Maecenas convallis ullamcorper ultricies. Curabitur ornare, ligula <em>semper consectetur sagittis</em>, nisi diam iaculis velit, id fringilla sem nunc vel mi. Nam dictum, odio nec pretium volutpat, arcu ante placerat erat, non tristique elit urna et turpis. Quisque mi metus, ornare sit amet fermentum et, tincidunt et orci. Fusce eget orci a orci congue vestibulum.</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/pexels/travel.jpeg" alt="travel.jpeg" />
    </div>
    
</div>

<p>Ut dolor diam, elementum et vestibulum eu, porttitor vel elit. Curabitur venenatis pulvinar tellus gravida ornare. Sed et erat faucibus nunc euismod ultricies ut id justo. Nullam cursus suscipit nisi, et ultrices justo sodales nec. Fusce venenatis facilisis lectus ac semper. Aliquam at massa ipsum. Quisque bibendum purus convallis nulla ultrices ultricies. Nullam aliquam, mi eu aliquam tincidunt, purus velit laoreet tortor, viverra pretium nisi quam vitae mi. Fusce vel volutpat elit. Nam sagittis nisi dui.</p>

<blockquote>
  <p>Suspendisse lectus leo, consectetur in tempor sit amet, placerat quis neque</p>
</blockquote>

<p>Etiam luctus porttitor lorem, sed suscipit est rutrum non. Curabitur lobortis nisl a enim congue semper. Aenean commodo ultrices imperdiet. Vestibulum ut justo vel sapien venenatis tincidunt.</p>

\[\Theta \ne \Gamma\]

<p>Phasellus eget dolor sit amet ipsum dapibus condimentum vitae quis lectus. Aliquam ut massa in turpis dapibus convallis. Praesent elit lacus, vestibulum at malesuada et, ornare et est. Ut augue nunc, sodales ut euismod non, adipiscing vitae orci<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>. Mauris ut placerat justo. Mauris in ultricies enim. Quisque nec est eleifend nulla ultrices egestas quis ut quam. Donec sollicitudin lectus a mauris pulvinar id aliquam urna cursus. Cras quis ligula sem, vel elementum mi. Phasellus non ullamcorper urna.</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">

      <p><span class="cit-authors">John Smith</span>, <span class="cit-title">A Title About Citations</span> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="A Tag" /><category term="Katex" /><summary type="html"><![CDATA[Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur.]]></summary></entry><entry><title type="html">Color Post</title><link href="http://localhost:4000/example/2019/05/18/color-post.html" rel="alternate" type="text/html" title="Color Post" /><published>2019-05-18T00:00:00+08:00</published><updated>2019-05-18T00:00:00+08:00</updated><id>http://localhost:4000/example/2019/05/18/color-post</id><content type="html" xml:base="http://localhost:4000/example/2019/05/18/color-post.html"><![CDATA[<h1 id="what-a-colorful-post">What a colorful post!</h1>

<p>This is an idea that came from <a href="https://github.com/xukimseven/HardCandy-Jekyll">xukimseven/HardCandy-Jekyll</a> 
looking at this cheerful and colorful theme, I wanted to enable something similar for Type-on-Strap.</p>

<p>You can go fork and star <em>HardCandy-Jekyll</em> too! 😉</p>

<!--more-->

<h2 id="how-does-it-work">How does it work?</h2>

<p>Basically you need to add just one thing, the color:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Color Post</span>
<span class="na">color</span><span class="pi">:</span> <span class="s">brown</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>It can either be a html color like <code class="language-plaintext highlighter-rouge">brown</code> (which look like red to me). Or with the rgb:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Color Post</span>
<span class="na">color</span><span class="pi">:</span> <span class="s">rgb(165,42,42)</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>The background used is <code class="language-plaintext highlighter-rouge">lineart.png</code> from <a href="https://github.com/xukimseven">xukimseven</a> you can edit it in the config file. 
If you want another one, put it in <code class="language-plaintext highlighter-rouge">/assets/img</code> as well.</p>

<blockquote>
  <p>⚠️ It’s a bit hacking the css in the <code class="language-plaintext highlighter-rouge">post.html</code></p>
</blockquote>]]></content><author><name>Sylhare</name></author><category term="Example" /><category term="Test" /><category term="Color" /><summary type="html"><![CDATA[What a colorful post! This is an idea that came from xukimseven/HardCandy-Jekyll looking at this cheerful and colorful theme, I wanted to enable something similar for Type-on-Strap. You can go fork and star HardCandy-Jekyll too! 😉]]></summary></entry><entry><title type="html">Feature images</title><link href="http://localhost:4000/example/2018/10/29/feature-images.html" rel="alternate" type="text/html" title="Feature images" /><published>2018-10-29T00:00:00+08:00</published><updated>2018-10-29T00:00:00+08:00</updated><id>http://localhost:4000/example/2018/10/29/feature-images</id><content type="html" xml:base="http://localhost:4000/example/2018/10/29/feature-images.html"><![CDATA[<p>Hopefully you will find enough information about how to set images in your blog here.
This is an example of a post which includes a feature image specified in the front matter of the post. 
The feature image spans the full-width of the page, and is shown with the title on permalink pages:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">feature-img</span><span class="pi">:</span> <span class="s2">"</span><span class="s">assets/img/feature-img/desk-messy.jpeg"</span>
<span class="na">thumbnail</span><span class="pi">:</span> <span class="s2">"</span><span class="s">assets/img/thumbnails/feature-img/desk-messy.jpeg"</span> 
</code></pre></div></div>

<p>You can also use a thumbnail, a smaller version of the same image to improve loading of the page.
The thumbnail will also be used when you share your article on other platform (linkedin, whatsapp, facebook, …).</p>

<blockquote>
  <ul>
    <li>And now it is working</li>
  </ul>
</blockquote>

<p>You can also add images aligned in your post using the <code class="language-plaintext highlighter-rouge">aligner</code> include.
Make sure to separate all of the image path from in a string separated with <code class="language-plaintext highlighter-rouge">,</code>.
It by default look into <code class="language-plaintext highlighter-rouge">assets/img/</code> so give the path from there, example:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="p">{</span><span class="sx">% include </span><span class="n">aligner</span><span class="p">.</span><span class="nf">html</span> <span class="n">images</span><span class="o">=</span><span class="s2">"pexels/book-glass.jpeg,triangle.png"</span> <span class="o">%</span><span class="p">}</span></code></pre></figure>

<div class="row">
    
    <div class="column">
        <img src="/assets/img/pexels/book-glass.jpeg" alt="book-glass.jpeg" />
    </div>
    
    <div class="column">
        <img src="/assets/img/feature-img/desk-messy.jpeg" alt="desk-messy.jpeg" />
    </div>
    
</div>

<p>Here you have two images side by side, but you can set more and set the amount per columns 
(by specifying the number of columns or let it be automatic using <code class="language-plaintext highlighter-rouge">"auto"</code>):</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="p">{</span><span class="sx">% include </span><span class="n">aligner</span><span class="p">.</span><span class="nf">html</span> <span class="n">images</span><span class="o">=</span><span class="s2">"portfolio/cabin.png,portfolio/cake.png,portfolio/circus.png"</span> <span class="n">column</span><span class="o">=</span><span class="mi">3</span> <span class="o">%</span><span class="p">}</span></code></pre></figure>

<div class="row">
    
    <div style="flex: 33.333333333333336%">
        <img src="/assets/img/portfolio/cabin.png" alt="cabin.png" />
    </div>
    
    <div style="flex: 33.333333333333336%">
        <img src="/assets/img/portfolio/cake.png" alt="cake.png" />
    </div>
    
    <div style="flex: 33.333333333333336%">
        <img src="/assets/img/portfolio/circus.png" alt="circus.png" />
    </div>
    
</div>

<p>it also works with only one images, it is made to display it smaller than normally.
However you can just use the Markdown way of doing it to get the image normal sized and centered.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Markdown way (bigger)</span>
<span class="o">!</span><span class="p">[</span><span class="no">Travel</span><span class="p">]({{</span> <span class="s2">"/assets/img/pexels/computer.jpeg"</span> <span class="o">|</span> <span class="n">relative_url</span><span class="p">}})</span>
<span class="c1"># Aligner with only One (50% of width)</span>
<span class="p">{</span><span class="sx">% include </span><span class="n">aligner</span><span class="p">.</span><span class="nf">html</span> <span class="n">images</span><span class="o">=</span><span class="s2">"pexels/computer.jpeg"</span> <span class="o">%</span><span class="p">}</span></code></pre></figure>

<div class="row">
    
    <div class="column">
        <img class="single" src="/assets/img/pexels/computer.jpeg" alt="computer.jpeg" />
    </div>
    
</div>]]></content><author><name></name></author><category term="Example" /><category term="Test" /><category term="Image" /><summary type="html"><![CDATA[Hopefully you will find enough information about how to set images in your blog here. This is an example of a post which includes a feature image specified in the front matter of the post. The feature image spans the full-width of the page, and is shown with the title on permalink pages:]]></summary></entry><entry><title type="html">Bootstrap</title><link href="http://localhost:4000/demo/2017/09/17/Use-Bootstrap.html" rel="alternate" type="text/html" title="Bootstrap" /><published>2017-09-17T00:00:00+08:00</published><updated>2017-09-17T00:00:00+08:00</updated><id>http://localhost:4000/demo/2017/09/17/Use-Bootstrap</id><content type="html" xml:base="http://localhost:4000/demo/2017/09/17/Use-Bootstrap.html"><![CDATA[<p>This theme is compatible with Bootstrap if you choose to use it in your pages or posts.
Here is a little demo with a code snippet, look at the source to see how the HTML and markdown get tangled.</p>

<h2 id="use-bootstrap">Use bootstrap</h2>

<p>Add some custom Bootstrap in the custom layout!</p>

<p><img src="https://startbootstrap.com/assets/img/sb-logo.svg" alt="startbootstrap" width="500" /></p>

<h3 id="snippet-example">Snippet example</h3>

<p>If you are new to Bootstrap you can  always check the <a href="https://getbootstrap.com/docs/4.1/getting-started/introduction/">documentation</a>.<br />
Here is an example from <a href="https://startbootstrap.com/snippets/portfolio-two-column">startbootstrap.com</a>.</p>

<!-- Page Content -->
<div class="container">

  <div class="row">
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project One</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Two</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Three</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Four</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Five</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Six</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.</p>
        </div>
      </div>
    </div>
  </div>
  <!-- /.row -->

</div>
<!-- /.container -->

<h3 id="mix-it-with-markdown">Mix it with Markdown</h3>

<p>All the above was custom HTML with Bootstrap.
You can also mix it up with some markdown.</p>

<p>You can use the bootstrap’s build in javascript API to control your event.
Here is a code snippet for the <a href="https://getbootstrap.com/docs/4.0/getting-started/javascript/">documentation</a>:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#myModal</span><span class="dl">'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">show.bs.modal</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">data</span><span class="p">)</span> <span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()</span> <span class="c1">// stops modal from being shown</span>
<span class="p">})</span>
</code></pre></div></div>

<p>That’s just for demo though, you would need to properly integrate your javascript in your page.
Usually you would put any custom javascript script in the <em>assets</em> folder under js and reference it in your page from there.</p>

<p>So try it out using the <code class="language-plaintext highlighter-rouge">bootstrap: true</code> flag! 😉</p>]]></content><author><name></name></author><category term="Demo" /><category term="Test" /><summary type="html"><![CDATA[This theme is compatible with Bootstrap if you choose to use it in your pages or posts. Here is a little demo with a code snippet, look at the source to see how the HTML and markdown get tangled.]]></summary></entry><entry><title type="html">Markdown and HTML</title><link href="http://localhost:4000/syntax/2014/11/28/markdown-and-html.html" rel="alternate" type="text/html" title="Markdown and HTML" /><published>2014-11-28T00:00:00+08:00</published><updated>2014-11-28T00:00:00+08:00</updated><id>http://localhost:4000/syntax/2014/11/28/markdown-and-html</id><content type="html" xml:base="http://localhost:4000/syntax/2014/11/28/markdown-and-html.html"><![CDATA[<p>Jekyll supports the use of <a href="http://daringfireball.net/projects/markdown/syntax">Markdown</a> with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.</p>

<h2 id="table-of-content">Table of content</h2>

<!-- To be placed at the beginning of the post, it is where the table of content will be generated -->
<ul>
  <li>TOC</li>
  <li>You need to put this at the beginning of the page where you want the table of content to be displayed</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>* TOC
{:toc}
</code></pre></div></div>

<p>It will then render the markdown and html titles (lines that begins with <code class="language-plaintext highlighter-rouge">#</code> or using the <code class="language-plaintext highlighter-rouge">&lt;h1&gt;&lt;/h1&gt;</code> tages)</p>

<h2 id="title">Title</h2>

<h3 id="subtitle">Subtitle</h3>

<p>Tables have also been extended from Markdown:</p>

<table>
  <thead>
    <tr>
      <th>First Header</th>
      <th>Second Header</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Content Cell</td>
      <td>Content Cell</td>
    </tr>
    <tr>
      <td>Content Cell</td>
      <td>Content Cell</td>
    </tr>
  </tbody>
</table>

<p>Here’s an example of an image, which is included using Markdown:</p>

<p><img src="/assets/img/pexels/book-glass.jpeg" alt="Image of a glass on a book" /></p>

<p>This is another example of list:</p>

<ul>
  <li>list of things
    <ol>
      <li>Sub list</li>
      <li>of Other things</li>
      <li>with numbers</li>
    </ol>
  </li>
  <li>And many more
    <ul>
      <li>Sub sub list
        <ul>
          <li>can go on …
            <ul>
              <li>and on …
                <ul>
                  <li>and on !</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>That’s it.</li>
    </ul>
  </li>
</ul>

<h3 id="other-subtitle">Other subtitle</h3>

<p>Highlighting for code in Jekyll is done using Base16 or Rouge. This theme makes use of Rouge by default.</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="c1">// count to ten</span>
<span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// count to twenty</span>
<span class="kd">var</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">while</span> <span class="p">(</span><span class="nx">j</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">j</span><span class="o">++</span><span class="p">;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span>
<span class="p">}</span></code></pre></figure>

<h3 id="math">Math</h3>

<p>Type on Strap uses KaTeX to display maths. Equations such as \(S_n = a \times \frac{1-r^n}{1-r}\) can be displayed inline.</p>

<p>Alternatively, they can be shown on a new line:</p>

\[f(x) = \int \frac{2x^2+4x+6}{x-2}\]]]></content><author><name>Rohan Chandra</name></author><category term="Syntax" /><category term="Katex" /><category term="Markdown" /><summary type="html"><![CDATA[Jekyll supports the use of Markdown with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.]]></summary></entry><entry><title type="html">What’s your title</title><link href="http://localhost:4000/2014/11/27/whats-your-title.html" rel="alternate" type="text/html" title="What’s your title" /><published>2014-11-27T00:00:00+08:00</published><updated>2014-11-27T00:00:00+08:00</updated><id>http://localhost:4000/2014/11/27/whats-your-title</id><content type="html" xml:base="http://localhost:4000/2014/11/27/whats-your-title.html"><![CDATA[<p>This is an example of a post which includes a feature image that has a
text, where you don’t want to redisplay the title.
Mind your image size in order for the text to be displayed where you want it to.
The only limit is your imagination.</p>

<p>Here is how the yaml looks inside the post:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">What's your title</span>
<span class="na">hide_title</span><span class="pi">:</span> <span class="no">true</span>
<span class="na">feature-img</span><span class="pi">:</span> <span class="s">assets/img/feature-img/story.jpeg</span>
<span class="na">author</span><span class="pi">:</span> <span class="s">mhagnumdw</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">Test</span><span class="pi">,</span> <span class="nv">Lorem</span><span class="pi">]</span>
</code></pre></div></div>

<p>You may wonder, why is there a title when you are not actually displaying it. <br />
Well that’s due to some jekyll limitation:</p>

<blockquote>
  <p>You <strong>can’t</strong> set the <strong>title</strong> to the <strong>empty string</strong></p>
</blockquote>

<p>The title is used elsewhere than inside the post, for example in the blog page that list this post.
An empty title would break those pages and possibly prevents jekyll to render your blog.</p>]]></content><author><name>Mhagnumdw</name></author><category term="Test" /><category term="Image" /><summary type="html"><![CDATA[This is an example of a post which includes a feature image that has a text, where you don’t want to redisplay the title. Mind your image size in order for the text to be displayed where you want it to. The only limit is your imagination.]]></summary></entry></feed>